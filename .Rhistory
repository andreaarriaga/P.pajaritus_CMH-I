<<<<<<< HEAD
# Se estraen  valor de P  para cada modelo
P.H1 <- S.H1$coefficients[2,4]
P.H2 <- S.H2$coefficients[2,4]
P.H3 <- S.H3$coefficients[2,4]
P.H4 <- S.H4$coefficients[2,4]
P.H5 <- S.H5$coefficients[2,4]
getwd()
library(lme4)
library(ggplot2)
library(gridExtra)
datos <- read.csv("Datos_tarea4.csv", header = TRUE)
str(datos)
# Para H1
h1 <- lm(D ~ H1 + A + P + L, data= datos)
h1
S.H1 <- summary(h1)
S.H1
# Para H2
h2 <- lm(D ~ H2+ A + P + L, data=datos)
h2
S.H2 <- summary(h2)
S.H2
# Para H3
h3 <- lm(D ~ H3+ A + P + L, data=datos)
h3
S.H3 <- summary(h3)
S.H3
# Para H4
h4 <- lm(D ~ H4+ A + P + L, data=datos)
h4
S.H4 <- summary(h4)
S.H4
#Para H5
h5 <- lm(D ~ H5+ A + P + L, data=datos)
h5
S.H5 <- summary(h5)
S.H5
# Se estraen  valor de P  para cada modelo
P.H1 <- S.H1$coefficients[2,4]
P.H2 <- S.H2$coefficients[2,4]
P.H3 <- S.H3$coefficients[2,4]
P.H4 <- S.H4$coefficients[2,4]
P.H5 <- S.H5$coefficients[2,4]
R <- data.frame("Indicador"= c("H1","H2", "H3", "H4", "H5"), "Valores de P"=c(P.H1, P.H2, P.H3, P.H4, P.H5))
R
p1 <- ggplot(data= datos, aes(x= H1, y= D)) +
geom_point() +
geom_smooth() +
labs(x="Indicador H1", y="Diversidad alélica el complejo CMH-I")
p2 <- ggplot(data= datos, aes(x= H2, y= D)) +
geom_point() +
geom_smooth() +
labs(x="Indicador H2", y="Diversidad alélica el complejo CMH-I")
p3 <- ggplot(data= datos, aes(x= H3, y= D)) +
geom_point() +
geom_smooth() +
labs(x="Indicador H3", y="Diversidad alélica el complejo CMH-I")
p4 <- ggplot(data= datos, aes(x= H4, y= D)) +
geom_point() +
geom_smooth() +
labs(x="Indicador H4", y="Diversidad alélica el complejo CMH-I")
p5 <- ggplot(data= datos, aes(x= H5, y= D)) +
geom_point() +
geom_smooth() +
labs(x="Indicador H5", y="Diversidad alélica el complejo CMH-I")
grid.arrange(p1, p2, p3, p4, p5, ncol=3, nrow=2)
library(lme4)
library(ggplot2)
library(gridExtra)
datos <- read.csv("Datos_tarea4.csv", header = TRUE)
# Para H1
h1 <- lm(D ~ H1 + A + P + L, data= datos)
h1
S.H1 <- summary(h1)
S.H1
# Para H2
h2 <- lm(D ~ H2+ A + P + L, data=datos)
h2
S.H2 <- summary(h2)
S.H2
# Para H3
h3 <- lm(D ~ H3+ A + P + L, data=datos)
h3
S.H3 <- summary(h3)
S.H3
# Para H4
h4 <- lm(D ~ H4+ A + P + L, data=datos)
h4
S.H4 <- summary(h4)
S.H4
#Para H5
h5 <- lm(D ~ H5+ A + P + L, data=datos)
h5
S.H5 <- summary(h5)
S.H5
# Se estraen  valor de P  para cada modelo
P.H1 <- S.H1$coefficients[2,4]
P.H2 <- S.H2$coefficients[2,4]
P.H3 <- S.H3$coefficients[2,4]
P.H4 <- S.H4$coefficients[2,4]
P.H5 <- S.H5$coefficients[2,4]
R <- data.frame("Indicador"= c("H1","H2", "H3", "H4", "H5"), "Valores de P"=c(P.H1, P.H2, P.H3, P.H4, P.H5))
R
p1 <- ggplot(data= datos, aes(x= H1, y= D)) +
geom_point() +
geom_smooth() +
labs(x="Indicador H1", y="Diversidad alélica el complejo CMH-I")
p2 <- ggplot(data= datos, aes(x= H2, y= D)) +
geom_point() +
geom_smooth() +
labs(x="Indicador H2", y="Diversidad alélica el complejo CMH-I")
p3 <- ggplot(data= datos, aes(x= H3, y= D)) +
geom_point() +
geom_smooth() +
labs(x="Indicador H3", y="Diversidad alélica el complejo CMH-I")
p4 <- ggplot(data= datos, aes(x= H4, y= D)) +
geom_point() +
geom_smooth() +
labs(x="Indicador H4", y="Diversidad alélica el complejo CMH-I")
p5 <- ggplot(data= datos, aes(x= H5, y= D)) +
geom_point() +
geom_smooth() +
labs(x="Indicador H5", y="Diversidad alélica el complejo CMH-I")
grid.arrange(p1, p2, p3, p4, p5, ncol=3, nrow=2)
p1 <- ggplot(data= datos, aes(x= H1, y= D)) +
geom_point() +
geom_smooth() +
labs(x="Indicador H1", y="Diversidad alélica el complejo CMH-I")
p2 <- ggplot(data= datos, aes(x= H2, y= D)) +
geom_point() +
geom_smooth() +
labs(x="Indicador H2", y="Diversidad alélica el complejo CMH-I")
p3 <- ggplot(data= datos, aes(x= H3, y= D)) +
geom_point() +
geom_smooth() +
labs(x="Indicador H3", y="Diversidad alélica el complejo CMH-I")
p4 <- ggplot(data= datos, aes(x= H4, y= D)) +
geom_point() +
geom_smooth() +
labs(x="Indicador H4", y="Diversidad alélica el complejo CMH-I")
p5 <- ggplot(data= datos, aes(x= H5, y= D)) +
geom_point() +
geom_smooth() +
labs(x="Indicador H5", y="Diversidad alélica el complejo CMH-I")
grid.arrange(p1, p2, p3, p4, p5, ncol=3, nrow=2)
grid.arrange(p1, p2, p3, p4, p5, ncol=3, nrow=2)
grid.arrange(p1, p2, p3, p4, p5, ncol=3, nrow=2)
grid.arrange(p1, p2, p3, p4, p5, ncol=3, nrow=2)
grid.arrange(p1, p2, p3, p4, p5, ncol=3, nrow=2)
grid.arrange(p1, p2, p3, p4, p5, ncol=2, nrow=3)
grid.arrange(p1, p2, p3, p4, p5)
grid.arrange(p1, p2, p3, p4, p5)
library(glm)
install.packages("glmm")
library(glmm)
h1 <- glm(D ~ H1 + A + P + L, data= datos, family = "poisson")
h1
S.H1 <- summary(h1)
S.H1
# Para H1
h1 <- glm(D ~ H1 + A + P + L, data= datos, family = "poisson")
h1
S.H1 <- summary(h1)
S.H1
# Para H2
h2 <- glm(D ~ H2+ A + P + L, data=datos,family = "poisson")
h2
S.H2 <- summary(h2)
S.H2
# Para H3
h3 <- glm(D ~ H3+ A + P + L, data=datos,family = "poisson")
h3
S.H3 <- summary(h3)
S.H3
# Para H4
h4 <- glm(D ~ H4+ A + P + L, data=datos, family = "poisson")
h4
S.H4 <- summary(h4)
S.H4
#Para H5
h5 <- glm(D ~ H5+ A + P + L, data=datos, family = "poisson")
h5
S.H5 <- summary(h5)
S.H5
# Se estraen  valor de P  para cada modelo
P.H1 <- S.H1$coefficients[2,4]
P.H2 <- S.H2$coefficients[2,4]
P.H3 <- S.H3$coefficients[2,4]
P.H4 <- S.H4$coefficients[2,4]
P.H5 <- S.H5$coefficients[2,4]
R <- data.frame("Indicador"= c("H1","H2", "H3", "H4", "H5"), "Valores de P"=c(P.H1, P.H2, P.H3, P.H4, P.H5))
R
View(h2)
=======
library(lme4)
library(ggplot2)
## Modelo correcto: incluye la poblacion y el año como efecto aleatorio
mod1 <- lmer(D ~ degradacion + (1|P) + (1|A) + L, data = datos)
library(lme4)
library(ggplot2)
# setwd("/home/andrea/Documentos/ciencia_replicable/P.pajaritus_CMH-I")
datos <- read.csv("Datos_tarea4.csv", header = TRUE)
str(datos)
## Modelo correcto: incluye la poblacion y el año como efecto aleatorio
mod1 <- lmer(D ~ H1 + H2 + H3 + H4 + H5 + (1|P) + (1|A) + L, data = datos)
# mod1
# summary(mod1)
# prueba con PCA
Hpca <- princomp(datos[,c("H1", "H2", "H3", "H4", "H5")])
# Hpca
summary(Hpca)
# str(Hpca)
## extrayendo los scrores del promer componente principal para hacerlo una nueva variable que agrupa todas las H
datos$degradacion <- Hpca$scores[,1]
head(datos)
## preparacion de los datos para hacer los graficos
datos$P <- as.factor(datos$P)
datos$A <- as.factor(datos$A)
## calculando el promedio por P
# prom <- aggregate(D ~ P, FUN = mean, data = datos)
## grafico con los scores del PC1 (degradacion) como variable predictora
ggplot(datos, aes(degradacion, D )) +
geom_point(alpha = 0.4,  show.legend = FALSE) +
geom_smooth(show.legend = FALSE) +
theme_bw()
## dividido por poblacion
ggplot(datos, aes(D, degradacion, color = P)) +
geom_point(alpha = 0.5,  show.legend = FALSE) +
geom_smooth(method = "lm", show.legend = FALSE) +
theme_bw()
## Modelo correcto: incluye la poblacion y el año como efecto aleatorio
mod2 <- lmer(D ~ degradacion + (1|P) + (1|A) + L, data = datos)
mod2
summary(mod2)
## Modelo correcto: incluye la poblacion y el año como efecto aleatorio
mod1 <- lmer(D ~ H1 + H2 + H3 + H4 + H5 + (1|P) + (1|A) + L, data = datos)
mod2
summary(mod2)
## Modelo correcto: incluye la poblacion y el año como efecto aleatorio
mod1 <- lmer(D ~ degradacion + (1|P) + (1|A) + L, data = datos)
mod1
summary(mod1)
## Modelo correcto: incluye la poblacion y el año como efecto aleatorio
mod2 <- lmer(D ~ H1 + H2 + H3 + H4 + H5 + (1|P) + (1|A) + L, data = datos)
mod2
summary(mod2)
## dividido por poblacion
ggplot(datos, aes(D, degradacion, color = A)) +
geom_point(alpha = 0.5,  show.legend = FALSE) +
geom_smooth(method = "lm", show.legend = FALSE) +
theme_bw()
## dividido por poblacion
ggplot(datos, aes(D, degradacion, color = P)) +
geom_point(alpha = 0.5,  show.legend = FALSE) +
geom_smooth(method = "lm", show.legend = FALSE) +
theme_bw()
## dividido por poblacion
ggplot(datos, aes(D, degradacion, color = P)) +
geom_point(alpha = 0.5,  show.legend = FALSE) +
geom_smooth(method = "lm", show.legend = FALSE) +
theme_bw()
summ(mod1)
library(jtools)
install.packages(jtools)
install.packages("jtools")
library(jtools)
library(jtools)
summ(mod1)
?geom_smooth()
geom_smooth
## preparacion de los datos para hacer los graficos
datos$P <- as.factor(datos$P)
datos$A <- as.factor(datos$A)
## calculando el promedio por P
# prom <- aggregate(D ~ P, FUN = mean, data = datos)
## grafico con los scores del PC1 (degradacion) como variable predictora
ggplot(datos, aes(degradacion, D )) +
geom_point(alpha = 0.4,  show.legend = FALSE) +
geom_smooth(show.legend = FALSE) +
theme_bw()
?lmer()
## Modelo correcto: incluye la poblacion y el año como efecto aleatorio
mod1 <- glmer(D ~ degradacion + (1|P) + (1|A) + L, data = datos, family = "poisson")
>>>>>>> main
